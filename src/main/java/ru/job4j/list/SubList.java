package ru.job4j.list;

import java.util.ArrayList;
import java.util.List;

/**
 * Может возникнуть ситуация, когда у нас есть список и
 * нам нужно получить его часть, которая находится
 * между двумя интересующими нас индексами. Что же
 * делать в данной ситуации? Не отчаиваться, не
 * усложнять, а просто применить метод subList():
 * <p>
 * List subList(int fromIndex, int toIndex) -
 * метод возвращает список, который содержит все
 * элементы исходного списка начиная с индекса
 * fromIndex(включительно) и до toIndex(значение исключается).
 * При этом, если выполняется условие fromIndex ==
 * toIndex,- метод вернет пустой список.
 * <p>
 * Задание: метод принимает два параметра - список и элемент,
 * который предполагается, что содержится в этом списке.
 * Необходимо реализовать метод, чтобы он возвращал
 * результаты следующим образом:
 * <p>
 * 1. Элемента нет в списке - возвращает пустой список.
 * <p>
 * 2. Элемент в списке встречается 1 раз - возвращает пустой список.
 * <p>
 * 3. Элемент встречается более одного - возвращается список,
 * начиная с первого вхождения элемента и заканчивая
 * предшествующим последнему вхождению элемента в исходной коллекции.
 */

public class SubList {
    public static List<String> getElementsBetweenIndexes(List<String> list, String el) {

        List<String> list1 = new ArrayList<String>();
        int firstIndex = 0;
        int lastIndex = 0;
        firstIndex = list.indexOf(el);
        lastIndex = list.lastIndexOf(el);
        if (firstIndex == lastIndex || firstIndex == -1) {
            return list1;
        } else {

/**
 * 3. Элемент встречается более одного - возвращается список, начиная
 с первого вхождения элемента и
 заканчивая предшествующим последнему вхождению элемента
 в исходной коллекции.
 */
            list = list.subList(firstIndex, lastIndex);
            return list;
        }
    }
}

